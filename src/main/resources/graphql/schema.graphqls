schema {
  query: Query
  mutation: Mutation
}

type Query {
  veiculoById(id: ID): Veiculo
  veiculoByModelo(modelo: String): [Veiculo]
  veiculosAbastecidosComDiesel: [Veiculo]
  veiculosAbastecidosComGasolina: [Veiculo]
  veiculosAbastecidosComEtanol: [Veiculo]
  veiculoByAnoFabricacao(ano: Int!) : [Veiculo]
  consumoById(id: ID): Consumo
  consumoByModelo(modelo: String): [Consumo]
  consumoByMarca(marca: String): [Consumo]
  consumoByTipo(tipo: TipoCombustivelEnum): [Consumo]
  consumoBtDatas(dataInicio: String, dataFim: String):[Consumo]
  consumoByVeiculoId(id: ID): [Consumo]
}

type Mutation{
  createVeiculo(veiculo: VeiculoInput!): Veiculo!
  updateVeiculo(veiculo: VeiculoInput!): Veiculo!
  deleteVeiculo(id: ID!): Int
  createConsumo(consumo: ConsumoInput!): Consumo!
  updateConsumo(consumo: ConsumoInput!): Consumo!
  deleteConsumo(id: ID!): Int
}

input VeiculoInput{
  id: ID
  marca: String
  modelo: String
  placa: String
  anoFabricacao: Int
  anoModelo: Int
}

input ConsumoInput{
  valor: Float
  dataAux: String
  data: String
  tipo: TipoCombustivelEnum
  veiculoId: ID!
}

type Veiculo {
  id: ID
  marca: String
  modelo: String
  placa: String
  anoFabricacao: Int
  anoModelo: Int
}

type Consumo {
  id: ID
  valor: Float
  dataAux: String
  data: String
  tipo: TipoCombustivelEnum
  veiculoId: ID!
}
enum TipoCombustivelEnum{
  DIESEL
  ETANOL
  GASOLINA
}